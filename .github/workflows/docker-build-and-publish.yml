name: Build And Deploy

on:
  push:
    tags: ['v*.*.*']

env:
  # github.repository as <account>/<repo>
  REPO_NAME: ${{ github.repository }}
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
  SSH_PORT: ${{secrets.SSH_PORT}}
  SSH_USER: ${{secrets.SSH_USER}}
  SSH_HOST: ${{secrets.SSH_HOST}}

jobs:
  buildAndPush:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs\/tags\/v}" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build the Docker image
        run: docker build --build-arg BOT_TELEGRAM_TOKEN=${{ secrets.BOT_TELEGRAM_TOKEN }} --build-arg BOT_GIPHY_API_KEY=${{ secrets.BOT_GIPHY_API_KEY }} --build-arg DESERTORES_CHAT_ID=${{ secrets.DESERTORES_CHAT_ID }} --build-arg VERSION=${{ steps.get_version.outputs.VERSION }} --build-arg BUILD_DATE="$(date +%Y/%m/%dT%H:%M:%S)" --file Dockerfile --tag ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY:${{ steps.get_version.outputs.VERSION }} .

      - name: Push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
        run: docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG}

      - name: Update latest the Docker image
        run: docker tag ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY:${{ steps.get_version.outputs.VERSION }} ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY:latest

      - name: Push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private.key
          sudo chmod 600 ~/.ssh/private.key
          ssh-keyscan -p 22022 -H $SSH_HOST > ~/.ssh/known_hosts
        shell: bash

      - name: Copy resources to remote
        run: scp -P $SSH_PORT -i ~/.ssh/private.key -r docker-compose.yml $SSH_USER@$SSH_HOST:~/docker/trendingchollos/docker-compose.yml
        shell: bash

      - name: Deploy service in remote
        run: ssh -t -t -p $SSH_PORT -i ~/.ssh/private.key $SSH_USER@$SSH_HOST "docker login -u AWS -p $(aws ecr get-login-password --region eu-west-3) 050914759395.dkr.ecr.eu-west-3.amazonaws.com && cd ~/docker/trendingchollos && docker compose pull && docker compose up -d"
        shell: bash
